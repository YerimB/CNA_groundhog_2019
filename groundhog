#!/usr/bin/python3

import sys
from math import pow, sqrt

gVals = [] # not in project * 3
rVals = []
sVals = []

ts = []
bollinger = [0.0, 0.0]
weirdest = [0.0, 0.0, 0.0, 0.0, 0.0]
weirdRatio = [0.0, 0.0, 0.0, 0.0, 0.0]
period = 0 ; switches = 0

def getTIA():
    avg = 0.0
    print("g=", end='')
    try:
        for n in range(1, period + 1):
            if (ts[-n] > ts[-(n + 1)]):
                avg += ts[-n] - ts[-(n + 1)]
        print("%.2f" % (avg / period), end='')
        gVals.append(avg / period) # whole curve
    except:
        print("nan", end='')


def getRTE():
    print("\tr=", end='')
    try:
        prev = 0
        if (len(ts) > period + 2):
            prev = round(100 * (ts[-2] - ts[-(period + 2)]) / ts[-(period + 2)])
        act = round(100 * (ts[-1] - ts[-(period + 1)]) / ts[-(period + 1)])
        print("%d%%" % act, end='')
        rVals.append(act) # whole curve
        return (False if ((prev * act) >= 0) else True)
    except:
        print("nan", end='')
        return False


def getSDev():
    global bollinger
    esperance = 0.0 ; var = 0.0

    print("\ts=", end='')
    try:
        for n in range(1, period + 1):
            esperance += ts[-n]
        esperance /= period
        for n in range(1, period + 1):
            var += pow((ts[-n] - esperance), 2)
        var = sqrt(var / period)
        print("%.2f" % var, end='')
        sVals.append(var) # whole curve
        bollinger = [esperance - (3 * var), esperance + (3 * var)]
        print("\nMean = [%.2f] | Bollinger = [%.3f, %.3f]" % (esperance, bollinger[0], bollinger[1]))
    except:
        print("nan", end='')


def replaceWeirdestValue(newDist):
    n = 0
    while (weirdRatio[n] != min(weirdRatio)):
        n += 1
    while (n < 4):
        weirdRatio[n] = weirdRatio[n + 1]
        weirdest[n] = weirdest[n + 1]
        n += 1
    weirdRatio[n] = newDist
    weirdest[n] = ts[-1]


def checkWeirdest():
    if (len(ts) <= period + 1 or (ts[-1] >= bollinger[0] and ts[-1] <= bollinger[1])):
        return
    oddRatio = (bollinger[0] - ts[-1]) if (ts[-1] < bollinger[0]) else (ts[-1] - bollinger[1])
    print("Found oddRatio = [%.3f]" % oddRatio)
    if (min(weirdRatio) < oddRatio):
        replaceWeirdestValue(oddRatio)


def groundHog():
    global switches
    hasSwitched = False

    while True:
        tmp = input()
        if (tmp == "STOP"):
            break
        ts.append(float(tmp))
        print(ts[-1])
        checkWeirdest()
        getTIA()
        hasSwitched = getRTE()
        getSDev()
        if (hasSwitched):
            print("\ta switch occurs", end='')
            switches += 1
        print()


# try:
if (len(sys.argv) != 2):
    exit(84)
period = int(sys.argv[1])
groundHog()
print("Global tendency switched %d times" % switches)
print("5 weirdest values are", weirdest)
# except:
#     exit(84)